AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Private Lending Marketplace Backend - Updated Auth Permissions

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, production]
  DatabaseStackName:
    Type: String
    Default: marketplace-database
    Description: Name of the CloudFormation stack containing DynamoDB tables
  JWTSecret:
    Type: String
    NoEcho: true
    Description: Secret key for JWT token generation
  CorsOrigin:
    Type: String
    Default: "*"
    Description: CORS origin for API Gateway

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.11
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        JWT_SECRET: !Ref JWTSecret
        USERS_TABLE: 
          Fn::ImportValue: !Sub "${DatabaseStackName}-UsersTable"
        LOANS_TABLE:
          Fn::ImportValue: !Sub "${DatabaseStackName}-LoansTable"
        LOAN_PARTICIPANTS_TABLE:
          Fn::ImportValue: !Sub "${DatabaseStackName}-LoanParticipantsTable"
        INVITATIONS_TABLE:
          Fn::ImportValue: !Sub "${DatabaseStackName}-InvitationsTable"
        ACH_DETAILS_TABLE:
          Fn::ImportValue: !Sub "${DatabaseStackName}-ACHDetailsTable"
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  # API Gateway
  MarketplaceApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      EndpointConfiguration:
        Type: REGIONAL
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          MetricsEnabled: true

  # Lambda Functions
  AuthHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "marketplace-auth-handler-${Environment}"
      CodeUri: src/handlers/auth_handler/
      Handler: index.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: 
              Fn::ImportValue: !Sub "${DatabaseStackName}-UsersTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-InvitationsTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoanParticipantsTable"
      Events:
        RegisterApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /auth/register
            Method: post
        LoginApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /auth/login
            Method: post

  LoanHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "marketplace-loan-handler-${Environment}"
      CodeUri: src/handlers/loan_handler/
      Handler: index.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoansTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoanParticipantsTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-InvitationsTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-UsersTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-ACHDetailsTable"
      Events:
        CreateLoanApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /loans
            Method: post
        GetLoanApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /loans/{id}
            Method: get
        GetMyLoansApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /loans/my-loans
            Method: get
        AddLendersApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /loans/{id}/lenders
            Method: post

  LenderHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "marketplace-lender-handler-${Environment}"
      CodeUri: src/handlers/lender_handler/
      Handler: index.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoanParticipantsTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoansTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-ACHDetailsTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-UsersTable"
      Events:
        GetPendingApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /lender/pending
            Method: get
        AcceptLoanApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /lender/accept/{loan_id}
            Method: put
        SearchLendersApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /lenders/search
            Method: get

  UserHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "marketplace-user-handler-${Environment}"
      CodeUri: src/handlers/user_handler/
      Handler: index.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-UsersTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoansTable"
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub "${DatabaseStackName}-LoanParticipantsTable"
      Events:
        GetProfileApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /user/profile
            Method: get
        GetDashboardApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /user/dashboard
            Method: get
        GetLenderPortfolioApi:
          Type: Api
          Properties:
            RestApiId: !Ref MarketplaceApi
            Path: /user/lender-portfolio
            Method: get

Outputs:
  MarketplaceApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${MarketplaceApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
  
  MarketplaceApiId:
    Description: "API Gateway ID"
    Value: !Ref MarketplaceApi
    Export:
      Name: !Sub "${AWS::StackName}-ApiId"